plugins {
    id 'java-library'
//    id 'signing'
    id "com.diffplug.spotless" version "5.16.0"
    // https://github.com/vanniktech/gradle-maven-publish-plugin
    id 'com.vanniktech.maven.publish' version '0.18.0'
}

// from gradle.properties
group = project.property('GROUP')
version = project.property('VERSION_NAME')

task printVersion {
    println project.version
}

//task javadocJar(type: Jar) {
//    archiveClassifier.set('javadoc')
//    from javadoc
//}
//
//task sourcesJar(type: Jar) {
//    archiveClassifier.set('sources')
//    from sourceSets.main.allSource
//}

def isReleaseBuild() {
    return !project.version.contains("SNAPSHOT")
}

publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//        }
//    }

    // See https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-gradle
    // and https://docs.gradle.org/current/userguide/publishing_setup.html
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/content/repositories/releases/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            name = "OSSRH"
            url = isReleaseBuild() ? releaseRepo : snapshotRepo
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

// https://docs.gradle.org/current/userguide/signing_plugin.html
//signing {
//    useGpgCmd()
//    sign publishing.publications.mavenJava
//}

//tasks.withType(Sign) {
//    // Requires gnupg. https://github.com/gradle/gradle/issues/8657
////    onlyIf { isReleaseBuild() && project.hasProperty("signing.gnupg.keyName") }
//}

repositories {
    mavenCentral()
}

//artifacts {
//    archives javadocJar, sourcesJar
//}

java {
    toolchain {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

spotless {
    java {
        googleJavaFormat('1.7')
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

/**
 * Publishing to Maven Central. See https://github.com/vanniktech/gradle-maven-publish-plugin
 */
allprojects {
    plugins.withId("com.vanniktech.maven.publish") {
        mavenPublish {
            sonatypeHost = "S01"
        }
    }
}
